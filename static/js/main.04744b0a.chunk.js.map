{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["src_App_0","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","acd","dest","handleChange","bind","assertThisInitialized","handleSubmit","today","Date","year","getFullYear","month","getMonth","getDate","now","setState","event","defineProperty","target","name","value","data","JSON","parse","localStorage","getItem","Number","values","i","length","splice","push","setItem","stringify","_this2","react_default","a","createElement","className","style","height","width","fontSize","position","top","right","onClick","clear","type","onChange","textAlign","placeholder","Output","Component","list","datas","react","border","align","map","key","substr","day","color","fontWeight","yoil","getDay","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04744b0a.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdate: '',\n\t\t\tacd: '',\n\t\t\tdest: '용인',\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\tcomponentDidMount(){\n\t\tconst today = new Date();\n\t\tlet year = today.getFullYear();\n\t\tlet month = today.getMonth()+1;\n\t\tif (month < 10) {month = '0'+month;}\n\t\tlet date = today.getDate();\n\t\tif (date < 10){ date = '0'+date;}\n\t\tconst now = year + '-' + month + '-' + date\n\t\tthis.setState({\n\t\t\tdate: now\n\t\t})\n\t}\n\n\thandleChange(event) {\n\t\tthis.setState({ [event.target.name]: event.target.value });\n\t}\n\thandleSubmit(event) {\n\t\tconst month = 8;\n\t\tlet data = JSON.parse(localStorage.getItem(month));\n\t\tconst date = this.state.date;\n\t\tconst dest = this.state.dest;\n\t\tconst acd = Number(this.state.acd);\n\t\tif (data === null) {\n\t\t\tdata = [[date, dest, acd]];\n\t\t} else {\n\t\t\tdata = Object.values(data);\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (this.state.date < data[i][0]) {\n\t\t\t\t\tdata.splice(i, 0, [date, dest, acd]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (i === data.length - 1) {\n\t\t\t\t\tdata.push([date, dest, acd]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlocalStorage.setItem(month, JSON.stringify(data));\n\n\t\tthis.setState({ date: '', dest: '용인', acd: '' });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h2>주파 계산기</h2>\n\t\t\t\t\t<button\n\t\t\t\t\tstyle={{ height: 30, width: 50, fontSize:'0.6rem', position:'absolute', top:20, right:20}}\n\t\t\t\t\tonClick={() =>{ localStorage.clear(); this.setState({date: '', dest: '용인', acd: ''})}}\n\t\t\t\t\t>초기화</button>\n\t\t\t\t<div className=\"inputs\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tvalue={this.state.date}\n\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tstyle={{textAlign:'center', fontSize:'1rem', width:'100%'}}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.dest}\n\t\t\t\t\t\tname=\"dest\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"행선지\"\n\t\t\t\t\t\tstyle={{textAlign:'center', fontSize:'1rem', width:'100%'}}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={this.state.acd}\n\t\t\t\t\t\tname=\"acd\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"누적주파\"\n\t\t\t\t\t\tstyle={{textAlign:'center', fontSize:'1rem', width:'100%'}}\n\n\t\t\t\t\t/>\n\t\t\t\t\t<input type=\"button\" value=\"저장\" onClick={this.handleSubmit} style={{fontSize:'1rem'}} />\n\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t<div className=\"outputs\">\n\t\t\t\t\t<Output />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\nfunction Output() {\n\t\tconst month = 8;\n\t\tconst lastacd = 80945;\n\t\tlet datas = JSON.parse(localStorage.getItem(month));\n\t\tlet list;\n\t\tlet monthsum = 0;\n\t\tif (datas === null) {\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t<h3>{month}월 주파</h3>\n    <table border=\"1px solid black\" width=\"360\" align = \"center\" style={{fontSize:'0.9rem'}}>\n\t\t<tr>\n\t\t\t<th>날짜</th>\n\t\t\t<th>행선지</th>\n\t\t\t<th>일간/월간</th>\n\t\t\t<th>누적</th>\n\t\t</tr>\n\t</table>\n\t\t\t\t\t</Fragment>\n\t\t\t)\n\t\t} else {\n\t\t\tfor (let i = 0 ; i < datas.length ; i++) {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tdatas[i].push(datas[i][2]-lastacd);\n\t\t\t\t\tdatas[i].push(datas[i][3]);\n\t\t\t\t} else {\n\t\t\t\t\tdatas[i].push(datas[i][2]-datas[i-1][2]);\n\t\t\t\t\tdatas[i].push(datas[i][3]+datas[i-1][4]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist = datas.map(data => \n\t\t\t\t(\n\t\t\t\t<tr key={data[2]}><td>{data[0].substr(5,2)}/{data[0].substr(8,2)} {yoil(new Date(data[0]).getDay())}</td><td>{data[1]}</td><td>{data[3]} / {data[4]}</td><td>{data[2]}</td></tr>\n\t\t\t\t))\n\t\t}\n\t\t\t\n\t\t\t\n\treturn (\n\t\t\t\t<Fragment>\n\t<h3>{month}월 주파</h3>\n    <table border=\"1px solid black\" width=\"360\" align = \"center\" style={{fontSize:'0.9rem'}}>\n\t\t<tr>\n\t\t\t<th>날짜</th>\n\t\t\t<th>행선지</th>\n\t\t\t<th>일간/월간</th>\n\t\t\t<th>누적</th>\n\t\t</tr>\n\t\t\t{list}\n\t</table>\n\t\t</Fragment>\n\t\n\t)\n}\n\nfunction yoil(day){\n\tif (day === 0) return <span style={{color:'red', fontWeight:500}}>일</span>\n\tif (day === 1) return '월'\n\tif (day === 2) return '화'\n\tif (day === 3) return '수'\n\tif (day === 4) return '목'\n\tif (day === 5) return '금'\n\tif (day === 6) return <span style={{color:'darkblue',  fontWeight:500}}>토</span>\n}\n\t\t\t","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}